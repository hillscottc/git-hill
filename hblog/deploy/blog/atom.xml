<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Your Site blog</title><link href="http://www.yoursite.com/blog/atom.xml" rel="self"/><link href="http://www.yoursite.com"/><updated>2013-05-18T16:44:49Z</updated><id>http://www.yoursite.com</id><entry><title>Merry Christmas</title><author><name>Your Name</name></author><link href="http://www.yoursite.com/blog/2007/happy-christmas.html"/><updated>2007-12-20T18:20:30Z</updated><published>2007-12-20T18:20:30Z</published><id>http://www.yoursite.com/blog/2007/happy-christmas.html</id><content type="html"></content></entry><entry><title>Happy New Year</title><author><name>Your Name</name></author><link href="http://www.yoursite.com/blog/2008/happy-new-year.html"/><updated>2008-12-31T18:21:15Z</updated><published>2008-12-31T18:21:15Z</published><id>http://www.yoursite.com/blog/2008/happy-new-year.html</id><content type="html">
       

&lt;!-- Hyde::Excerpt::Begin --&gt;

&lt;h3&gt;ad commodi eum laboriosam architecto tempore doloribus beatae ipsam&amp;nbsp;odio&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Autem animi voluptas aspernatur itaque corrupti, vitae aspernatur tenetur accusamus temporibus ducimus magnam deleniti iusto, sunt sapiente inventore blanditiis quaerat quae deleniti? Eaque corrupti laboriosam illum quia totam porro recusandae delectus, nemo magnam voluptate dolorum unde eaque accusamus suscipit, incidunt quis itaque vitae illo exercitationem magni totam quae veniam molestiae, architecto dolore ducimus magni impedit reprehenderit quis ipsa deserunt ex accusamus&amp;nbsp;pariatur?&lt;/p&gt;

&lt;p&gt;Neque a voluptatum sint tenetur nesciunt ratione totam sapiente ullam, distinctio minus praesentium ex harum nihil tempora quis eligendi beatae cumque, eos reiciendis tenetur, veritatis placeat debitis quae fugit explicabo tenetur illum exercitationem cum. Provident sed temporibus, est culpa libero quas voluptatum repellendus dolorem nemo labore mollitia eius, commodi hic libero accusantium velit optio eum molestiae, molestias quasi voluptate architecto dicta&amp;nbsp;perspiciatis?&lt;/p&gt;

&lt;!-- Hyde::Excerpt::End --&gt;

&lt;h3&gt;ea quasi fugiat iste&amp;nbsp;temporibus&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Quasi vitae officiis ipsum consectetur, odit voluptate ex ipsum repellendus quas, qui aliquid voluptatum hic quasi cum saepe dolorum molestiae ad modi, soluta sequi sunt vel eligendi culpa ipsam nemo quia, commodi sit voluptatibus nobis vero natus saepe id eveniet voluptatem. Placeat facilis totam odit esse aliquam autem aliquid pariatur, corporis dolorem laborum quis porro veniam nobis, est molestias laboriosam tenetur quia&amp;nbsp;reiciendis?&lt;/p&gt;

&lt;h3&gt;perspiciatis&amp;nbsp;qui&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Facere omnis doloremque provident hic dolores nemo dolore repellat, dicta vel ipsum sunt a nam sapiente quaerat vitae odit rerum voluptates, a incidunt minima fugiat quos unde atque amet, totam vel sapiente id? Doloribus deleniti maiores placeat. Natus doloribus assumenda temporibus culpa itaque ullam nihil magni nesciunt, officia repudiandae nisi dolorum adipisci magni, facilis adipisci obcaecati reprehenderit minus odio repudiandae earum&amp;nbsp;fugit?&lt;/p&gt;

&lt;p&gt;Ab ratione quasi commodi suscipit dolore consequuntur? Quia neque fugiat iure suscipit libero, iusto reprehenderit commodi dignissimos repellendus accusantium distinctio sed corrupti ducimus? Cumque numquam possimus aperiam, soluta temporibus eum quam, itaque et delectus dolore praesentium recusandae perferendis odio ratione at&amp;nbsp;maiores?&lt;/p&gt;


   </content></entry><entry><title>Merry Christmas</title><author><name>Your Name</name></author><link href="http://www.yoursite.com/blog/2008/happy-christmas.html"/><updated>2008-12-20T18:20:30Z</updated><published>2008-12-20T18:20:30Z</published><id>http://www.yoursite.com/blog/2008/happy-christmas.html</id><content type="html">
       

&lt;!-- Hyde::Excerpt::Begin --&gt;

&lt;h3&gt;dolor consequuntur ullam aut sapiente quae suscipit dolores dolorum&amp;nbsp;hic&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Voluptate incidunt optio accusantium iusto autem assumenda, nam iure vitae dolores odio nulla vero aspernatur maiores rem cupiditate recusandae. Sequi corrupti laboriosam mollitia corporis reprehenderit nulla, dolorum voluptatem blanditiis enim atque eius, beatae ipsum dolorem saepe sed illo veritatis quae dignissimos atque. Blanditiis explicabo officia accusantium beatae sequi delectus quibusdam ipsa ex? Praesentium ducimus voluptate porro ipsam ullam amet tenetur non exercitationem sapiente, unde hic ab, exercitationem aliquam provident adipisci sequi quibusdam, magni modi praesentium fuga ad laborum distinctio voluptate tempore exercitationem, quis voluptatum tempora nemo itaque nesciunt commodi corporis laudantium dolores sunt&amp;nbsp;beatae.&lt;/p&gt;

&lt;p&gt;Tempore unde voluptatum aliquid qui suscipit, quisquam maxime incidunt tenetur hic fugit dicta aperiam porro obcaecati nisi necessitatibus, accusamus cum earum numquam cumque obcaecati quasi fugiat explicabo, cupiditate qui voluptatibus et, tempora rerum impedit culpa possimus. Sapiente adipisci dolor quos mollitia eligendi quia, nemo voluptatibus laborum reprehenderit officiis delectus repellat, ratione aspernatur totam, aperiam odit voluptatum harum a id doloribus suscipit dolore? Nesciunt soluta quaerat, repellendus minus ut vitae quam, non consequatur neque et, ut temporibus nisi quis repudiandae consequatur perferendis laboriosam, inventore reiciendis dolores dignissimos delectus&amp;nbsp;autem.&lt;/p&gt;

&lt;!-- Hyde::Excerpt::End --&gt;

&lt;h3&gt;hic magnam vero ab&amp;nbsp;laborum&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Laborum ullam magni non sed, nemo reiciendis eaque ullam ipsam facere dolor laborum hic, ducimus corrupti distinctio vitae nobis magnam iusto, suscipit dicta praesentium dignissimos quidem. Doloribus quos perspiciatis, dolorum impedit rem doloribus consequuntur placeat, consectetur deleniti libero nisi facere laudantium fugiat, odio eaque voluptate dicta voluptatibus corporis possimus qui earum? Blanditiis neque perspiciatis expedita soluta illum aspernatur numquam, voluptatibus veritatis harum ad temporibus voluptas officiis, explicabo animi repellendus voluptatum, perferendis voluptatum&amp;nbsp;laudantium?&lt;/p&gt;

&lt;h3&gt;assumenda&amp;nbsp;voluptas&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Eos quaerat repellendus impedit? Quo aspernatur labore cupiditate odio dolore voluptatem voluptas, nobis quam delectus id harum dicta autem provident facere, voluptas molestiae nobis doloremque nisi ratione, quod magni architecto modi dolorem ratione distinctio rem explicabo amet? Itaque dignissimos quis deserunt eos illum labore doloremque iusto aliquid, iure exercitationem deserunt repellat quis consequuntur aperiam veniam accusantium vero inventore minima, laudantium temporibus nisi maiores molestias expedita exercitationem doloribus vel blanditiis labore, quisquam accusamus eius&amp;nbsp;expedita.&lt;/p&gt;

&lt;p&gt;Nam mollitia animi nemo minima fuga magni quae odit, beatae ipsa eligendi perspiciatis nemo tenetur fugiat consequatur. Nemo ducimus pariatur molestiae commodi obcaecati provident quas, quod quo tempore cupiditate aliquam ratione earum explicabo, ipsam quod officia voluptatem nostrum aliquid ducimus, quidem itaque nobis iusto vero architecto quaerat excepturi quae amet, non voluptas delectus quod animi adipisci veniam fugiat incidunt quibusdam officiis aspernatur? Ipsum velit perferendis doloribus nemo quod temporibus minus a, hic tempore officiis harum inventore a&amp;nbsp;explicabo.&lt;/p&gt;


   </content></entry><entry><title>Introducing Hyde</title><author><name>Your Name</name></author><link href="http://www.yoursite.com/blog/2009/introducing-hyde.html"/><updated>2009-01-20T22:07:29Z</updated><published>2009-01-20T22:07:29Z</published><id>http://www.yoursite.com/blog/2009/introducing-hyde.html</id><content type="html">
       

&lt;!-- Hyde::Excerpt::Begin --&gt;

&lt;h3&gt;dolor id qui explicabo distinctio fugiat quia minus ipsa&amp;nbsp;perspiciatis&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Cum quam nihil architecto cupiditate vitae suscipit laboriosam sit dolores, sint vel culpa quibusdam omnis minima incidunt, excepturi impedit ut consequatur culpa officiis vitae asperiores quasi, officiis nesciunt numquam suscipit velit eius? Vitae eaque quisquam dicta&amp;nbsp;dignissimos?&lt;/p&gt;

&lt;p&gt;Sunt obcaecati eveniet incidunt enim numquam, corrupti ullam ipsam ab delectus odit qui sequi dolorum sit veritatis, fugiat eligendi libero quos aut culpa iste corrupti odit sint debitis asperiores? Alias deserunt enim saepe doloribus, quaerat voluptatem officia exercitationem odit optio, consequatur ad a iure quos&amp;nbsp;ducimus.&lt;/p&gt;

&lt;!-- Hyde::Excerpt::End --&gt;

&lt;p style=&quot;color:red&quot;&gt;This is a&amp;nbsp;reference.&lt;/p&gt;

&lt;h3&gt;eius corporis harum beatae&amp;nbsp;ullam&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Quos saepe eveniet eaque ipsa quia deleniti eius porro aspernatur facere, obcaecati aliquam cupiditate? Itaque vel nisi, animi itaque labore repellat saepe? Veritatis asperiores reiciendis iure ab ea corporis expedita, provident tempora ad sed exercitationem necessitatibus voluptas quis aliquid, sint repudiandae voluptates sed ex ducimus inventore adipisci, inventore similique ducimus voluptas quisquam autem quidem, sed voluptatibus eos repellat? Impedit iste unde laudantium, vitae suscipit rem officia consectetur libero dolor aspernatur iure iusto quae, vitae ducimus inventore maxime impedit quaerat assumenda eum, nihil fuga quis culpa eligendi, cupiditate eum sunt dicta officiis excepturi molestias aspernatur voluptas possimus temporibus&amp;nbsp;reiciendis?&lt;/p&gt;

&lt;h3&gt;veniam&amp;nbsp;impedit&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Et quibusdam quos repellat nam iste eos, illum reprehenderit tempora deleniti placeat pariatur sunt maxime eos cum, quam facere pariatur ut repellendus incidunt similique ipsa doloremque impedit ea? Doloribus nobis unde fuga, enim et libero totam, animi consectetur hic error eveniet ipsum, error quaerat blanditiis enim voluptatem quia aliquam voluptates id odio vel ipsam, quis nesciunt magni veniam illum iure eum? Reprehenderit doloremque ea odit velit incidunt fuga quae laborum adipisci, ducimus nostrum cum ex quaerat. Sapiente hic inventore adipisci molestias, harum id quo eaque placeat perferendis, illo mollitia ipsam pariatur ipsum ullam amet animi voluptas ipsa, aut aliquid perspiciatis aspernatur quos autem, repellendus distinctio accusamus optio quis fugiat blanditiis fuga&amp;nbsp;laboriosam?&lt;/p&gt;

&lt;p&gt;Veritatis quae harum sed hic non delectus molestias quam cumque, quidem quod explicabo amet, sint ab quae debitis fuga quod doloremque accusantium. Aliquam totam aspernatur commodi ab labore eligendi nobis, facere architecto vitae libero, atque officia nam, quisquam quae praesentium porro sequi, aut optio nemo quos soluta totam veniam incidunt&amp;nbsp;quaerat?&lt;/p&gt;


   </content></entry><entry><title>Hyde has references</title><author><name>Your Name</name></author><link href="http://www.yoursite.com/blog/2010/hyde_has_references.html"/><updated>2010-10-15T22:07:29Z</updated><published>2010-10-15T22:07:29Z</published><id>http://www.yoursite.com/blog/2010/hyde_has_references.html</id><content type="html">
       

&lt;!-- Hyde::Excerpt::Begin --&gt;

&lt;h3&gt;illo error tempore delectus repudiandae tenetur quas laboriosam eaque&amp;nbsp;at&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Eveniet nihil ipsum sunt placeat, sed vel veritatis quas incidunt soluta sint adipisci ea voluptas ratione consectetur, hic autem voluptates dolores. Eligendi porro doloribus, totam atque ut voluptatum molestias eos quia rerum ad sapiente ex, illo veniam optio natus maxime nesciunt distinctio quis animi atque, necessitatibus nam eius praesentium molestiae alias earum non aspernatur ad eaque doloribus. Illum fugit a amet dolores quo? Mollitia unde animi consequatur modi asperiores eum quas magnam sunt suscipit, dignissimos tempore exercitationem at nostrum illo accusantium voluptatibus tenetur, delectus maiores pariatur temporibus deleniti repellendus id nisi, tenetur blanditiis consequatur dolores ullam quia libero eligendi, esse eos cum id magnam&amp;nbsp;iure?&lt;/p&gt;

&lt;p&gt;Culpa earum maxime porro facilis rerum nihil. Ab fuga neque magnam quod dolor, quaerat quisquam nihil aperiam magnam laudantium, iste officiis dolore quis delectus vitae reprehenderit excepturi laboriosam labore, consequatur fuga delectus maxime impedit ratione quod vero illo, animi provident magni laudantium perspiciatis. Quidem reprehenderit adipisci iure veritatis dicta magni necessitatibus saepe ratione, debitis aliquid eveniet minima modi laboriosam tenetur&amp;nbsp;saepe.&lt;/p&gt;

&lt;!-- Hyde::Excerpt::End --&gt;

&lt;h3&gt;quam libero neque tempora&amp;nbsp;debitis&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Optio molestias id cumque eos consequuntur laboriosam rem ipsam sint distinctio, temporibus reprehenderit quia blanditiis nostrum accusamus molestiae nulla voluptas quasi repudiandae, maiores quasi quod incidunt esse ullam excepturi. Officia deleniti quo, incidunt illum blanditiis perferendis quia eaque fugiat nam maiores modi fugit, ab eveniet voluptatibus consequuntur sed&amp;nbsp;et?&lt;/p&gt;

&lt;h3&gt;deleniti&amp;nbsp;rerum&lt;/h3&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est&amp;nbsp;laborum.&lt;/p&gt;

&lt;p&gt;Cupiditate perferendis amet eligendi beatae neque aliquam repudiandae tempore ipsa, quae corporis id culpa ad obcaecati ab, blanditiis ipsum quas eaque dolor corporis non eos, officia accusantium qui fuga officiis. Velit unde officia quod incidunt minus, optio nulla doloremque animi architecto consectetur et ullam possimus est vitae, ad provident&amp;nbsp;quasi.&lt;/p&gt;

&lt;p&gt;Magnam maxime corrupti similique. A corrupti eveniet modi blanditiis minus necessitatibus repellat provident enim labore expedita, pariatur fuga veritatis tempora consequatur repudiandae repellendus voluptatibus fugit possimus architecto, eaque ducimus laboriosam repellendus&amp;nbsp;rem?&lt;/p&gt;


   </content></entry><entry><title>Emacs</title><author><name>Your Name</name></author><link href="http://www.yoursite.com/blog/technotes/emacs-keys.html"/><updated>2008-12-20T18:20:30Z</updated><published>2008-12-20T18:20:30Z</published><id>http://www.yoursite.com/blog/technotes/emacs-keys.html</id><content type="html">
       

&lt;p&gt;shell-expand-line&amp;nbsp;(Ctrl-Alt-e)&lt;/p&gt;
&lt;p&gt;Emacs in console mode by typing emacs&amp;nbsp;-nw&lt;/p&gt;
&lt;p&gt;EMACS&lt;/p&gt;
&lt;h2&gt;Basic&amp;nbsp;moves&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;^u        Del left of&amp;nbsp;curs&lt;/li&gt;
&lt;li&gt;^k        Del right of&amp;nbsp;curs&lt;/li&gt;
&lt;li&gt;^w    Del word on&amp;nbsp;left&lt;/li&gt;
&lt;li&gt;^y        Paste (after&amp;nbsp;above)&lt;/li&gt;
&lt;li&gt;^_        Undo or ^u&amp;nbsp;???&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ch/Replace
- ^s     Search forward
- ^r     search backward
- ^g     return to where search started
- €%     query replace
- Sp or y replace this occurence
- Del or n don&#39;t replace
- .      only replace this and exit (replace)
- ,      replace and pause (resume with Space or y)
- !      replace all following occurences
- ^      back to previous match
- RET or q quit replace
- €^sRET search for huuuuregex forward
- €^rRET search for regex backward
- €^s    incremental search
- ^s     repeat incremental search
- €^r    incremental search backwards
- ^r     repeat backwards
- €x     query-replace-regexp search and&amp;nbsp;replace&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;^x ^f  &quot;find&quot; = open/create file in&amp;nbsp;buf&lt;/li&gt;
&lt;li&gt;^x ^s  save the&amp;nbsp;file&lt;/li&gt;
&lt;li&gt;^x b   create/switch&amp;nbsp;buff&lt;/li&gt;
&lt;li&gt;^x ^b  buf&amp;nbsp;list&lt;/li&gt;
&lt;li&gt;^x k   kill&amp;nbsp;buf&lt;/li&gt;
&lt;li&gt;^x ^c  close down&amp;nbsp;emacs&lt;/li&gt;
&lt;li&gt;^g     quit the running/entered&amp;nbsp;command&lt;/li&gt;
&lt;li&gt;^x u   undo previous&amp;nbsp;action&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;€x     revert-buffer RETURN (insert like that)
         undo all changes since last&amp;nbsp;save&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To pass numeric args to a command,
  type meta digits before the command.
So, €3, ^w moves back&amp;nbsp;3&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ctrl+X, Ctrl+E binding.
To use it, you can type anything at the command prompt (including nothing at all) and press Ctrl+X, Ctrl+E to bring up your $EDITOR, be it Vim, Emacs, or Nano, with the contents of the command line there to edit. As soon as you save and quit, the command will be run as stated, and will be entered into the command history as if you typed it out on the shell&amp;nbsp;directly.&lt;/p&gt;
&lt;p&gt;There’s also a handy built-in Bash shortcut, fc (short for “fix command”) to open the previous command in your editor, allow you to edit it, and then run it automatically when you quit. This is particularly useful if you’ve made a small mistake in a complex line of shell&amp;nbsp;code.&lt;/p&gt;
&lt;p&gt;Also, giving an argument&lt;em&gt; to Alt-. inserts the nth argument from the previous command.
&lt;/em&gt;which you do by either pressing Escape and then inputting a number (works everywhere) or typing the number while holding down Alt, before pressing Alt-. (handier, may not work in some&amp;nbsp;terminals)&lt;/p&gt;
&lt;h1&gt;history&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;^r        to search, hit again for&amp;nbsp;next&lt;/li&gt;
&lt;li&gt;!         then str start of past&amp;nbsp;cmd&lt;/li&gt;
&lt;li&gt;!?xyx     find xyz anywhere in past&amp;nbsp;cmd&lt;/li&gt;
&lt;li&gt;^         replace in prev cmd
  $ dd if=kern.flp of=/dev/fd0k
  $ ^kern^mfsroot
  Becomes
  $ dd if=mfsroot.flp&amp;nbsp;of=/dev/fd0&lt;/li&gt;
&lt;li&gt;:p        print cmd and add to history
  $&amp;nbsp;!xyz:p&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;!$        last arg of the prev cmd
As an alternative to !$, you can use Esc+. (hold escape, press full stop). That places the last argument from previous command at the cursor, ready for&amp;nbsp;editing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;!*        all args of prev&amp;nbsp;cmd&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;M-fforward-word&amp;nbsp;M-bbackward-word&lt;/p&gt;
&lt;p&gt;Killing and Yanking
C-kkill-line
C-x Ruboutbackward-kill-line
C-uunix-line-discard
M-dkill-word
M-Ruboutbackward-kill-word
C-wunix-word-rubout
M-\delete-horizontal-space
C-yyank
M-yyank-pop
(unbound)kill-whole-line
(unbound)kill-region
(unbound)copy-region-as-kill
(unbound)copy-backward-word&amp;nbsp;(unbound)copy-forward-word&lt;/p&gt;
&lt;p&gt;E.g.:
$ echo uno dos tres cuatro
$ echo one two three four
Then typing “A-0 A-. SPC A-2 A-. SPC A-1 A-..” will insert:
$ echo two uno
Not very impressive with such short arguments, but a tremendous help with long&amp;nbsp;ones.&lt;/p&gt;
&lt;p&gt;Also important is the kill ring, a feature Emacs users will already be familiar with.
Killed text goes to a stack and then you can yank (paste) it back.
Some ways to kill text:
C-k: kill from the cursor to the end of the line
C-u: kill from the cursor to the beginning of the line
C-w: kill from the beginning of the word at or preceding the cursor (repeating without moving results in a single, longer kill)
M-d: same as above, but forward (also chainable with&amp;nbsp;C-w)&lt;/p&gt;
&lt;p&gt;Getting text from the kill ring:
C-y: yank last kill
M-y (before typing or moving after C-y): substitute yanked text with previous kill, repeat until desired text is&amp;nbsp;found&lt;/p&gt;
&lt;p&gt;Personally, I&#39;m not a fan of the Ctrl-R incremental reverse search. You can keep pressing Ctrl-R to find the next match, but I&#39;ve never found the right key to press to go in the other direction if you overshot. The bash manpage says that Ctrl-S should do this, but that has never worked for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;Instead, I put these in my ~/.inputrc among other&amp;nbsp;things:&lt;/p&gt;
&lt;h1&gt;page-up,&amp;nbsp;page-down&lt;/h1&gt;
&lt;p&gt;&lt;span class=&quot;dquo&quot;&gt;&quot;&lt;/span&gt;\e[5~&quot;: history-search-backward
&quot;\e[6~&quot;: history-search-forward
These work differently. They search history based on what you&#39;ve typed so far. If the cursor is&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;$ foo_
...then you can use Page Up or Page Down to cycle through all the previous commands that start with the foo prefix. I find this a lot easier and quicker, because it avoids all the false positives of commands that contained foo somewhere in the middle; usually I&#39;m looking for something that begins with a certain&amp;nbsp;string.&lt;/p&gt;
&lt;p&gt;Another note - when customizing your .inputrc, to get the escape sequence of a given key, press Ctrl-V then the key. For example, if I press Ctrl-V then Ctrl-Shift-F12, I see&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;However, if you’re building a particularly complex string of commands involving a lot of pipes, escapes, and redirections, it often turns out to be handy to actually load them into your favourite editor, to give you full facility to edit them in any way you wish. Bash provides a method for this in the form of&amp;nbsp;its&lt;/p&gt;
&lt;p&gt;If this happens to bring up the wrong editor, perhaps because your choice doesn’t match that of the system administrator, you can set your personal preference of editor like&amp;nbsp;so:&lt;/p&gt;
&lt;p&gt;$ export EDITOR=/usr/bin/vim
You can confirm this is working by checking your environment&amp;nbsp;variables:&lt;/p&gt;
&lt;p&gt;$ export
One downside of this method is that without special setup within your editor, you lose some of the benefits of things like tab completion. Fortunately it only takes a little creative mapping to make this work in Vim, taking advantage of the Ctrl+X, Ctrl+F file completion that’s already built in. You could even bind that straight to the Tab key if you don’t otherwise use&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;:inoremap &lt;Tab&gt; &lt;C-X&gt;&lt;C-F&gt;
This entry was posted in Bash and tagged command, editor, fc, fix, mode by Tom Ryder. Bookmark the&amp;nbsp;permalink.&lt;/p&gt;
&lt;p&gt;$ ^[[24;6~
(Note that the sequence you see here depends on the terminal you&#39;re using. Most terminals these days don&#39;t differ too much, and they all use the xterm sequences. However, if you often access a system over ssh and you will be using different terminals that aren&#39;t compatible, then you can&#39;t blindly put these escape sequences in your .inputrc. You have to use conditionals, like $if term=foo ... $else ...&amp;nbsp;$endif.)&lt;/p&gt;
&lt;p&gt;The ^[ is a single character (escape) and is written \e in the .inputrc, but otherwise the rest is the same. So if I wanted to bind Ctrl-Shift-F12 to, say, alias-expand-line, then I&#39;d add this&amp;nbsp;line:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;dquo&quot;&gt;&quot;&lt;/span&gt;\e[24;6~&quot;: alias-expand-line
Save the file, press Ctrl-X, Ctrl-R to reload the file, then type something that you know is aliased like ls and press Ctrl-Shift-F12 and see it expand. (That was just an example to illustrate the point of making your own bindings, I don&#39;t actually use that key combination for&amp;nbsp;that.)&lt;/p&gt;
&lt;p&gt;SearC-_ or C-x C-uundo&amp;nbsp;M-orrevert-line&lt;/p&gt;
&lt;p&gt;Completing
TAcomplete
M-?possible-completions
M-*insert-completions
(unbound)menu-complete&amp;nbsp;(unbound)delete-char-or-list&lt;/p&gt;
&lt;p&gt;C-]character-search
M-C-]character-search- backward&amp;nbsp;M-#insert-comment&lt;/p&gt;
&lt;p&gt;Window-Commands
- ^x 2   split window vertically
- ^x o   change to other window
- ^x 0   delete window
- ^x 1   close all win but current
- ^x 4   0 kill buffer and window
- ^x 5   2 make new frame
- ^x 5   o change to other frame
- ^x 5   0 close this&amp;nbsp;frame&lt;/p&gt;
&lt;p&gt;Programming Help
- €!     Shell, to Run script in the minibuffer
- ^h k €!  help with run
- €^\    indent region between cursor and mark
- €m     move to first (non-space) char in this line
- €^     attach this line to previous
- €;     formatize and indent comment
- ^c RETURN Set cursor to bgn of func and mark at the end
- ^c ^q  indent the whole function
- ^c ^a  toggle modus where e signs (like {}:&#39;;./*)
         makes emacs do the indention
- ^c ^d  toggle auto hungry mode where emacs deletes
         groups of spaces with one del-press
- ^c ^c  comment out marked area
- €x     outline-minor-mode collapses func defs
- €x     show-subtree if this collapsed
- €.     If in a function call, go to def&amp;nbsp;definition&lt;/p&gt;
&lt;p&gt;To make emacs sane you can add
;; disable color crap
(setq-default global-font-lock-mode nil)
to your .emacs file. You can also toggle the color crap with &quot;Meta-x&amp;nbsp;global-font-lock-mode&quot;.&lt;/p&gt;

   </content></entry><entry><title>Merry Christmas</title><author><name>Your Name</name></author><link href="http://www.yoursite.com/blog/technotes/happy-christmas.html"/><updated>2008-12-20T18:20:30Z</updated><published>2008-12-20T18:20:30Z</published><id>http://www.yoursite.com/blog/technotes/happy-christmas.html</id><content type="html"></content></entry><entry><title>Linux Searching</title><author><name>Your Name</name></author><link href="http://www.yoursite.com/blog/technotes/unix-grep-find.html"/><updated>2008-12-20T18:20:30Z</updated><published>2008-12-20T18:20:30Z</published><id>http://www.yoursite.com/blog/technotes/unix-grep-find.html</id><content type="html">
       

&lt;h1&gt;grep&amp;nbsp;:&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;grep -lr &quot;Advertiser&quot; ./*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-l files-with-matches&lt;br /&gt;
-r recursive,&amp;nbsp;subdirs  &lt;/p&gt;

&lt;h1&gt;find&amp;nbsp;:&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;find . -name &quot;rc.conf&quot; -print
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;locate&amp;nbsp;:&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;locate &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;


   </content></entry><entry><title>Vim</title><author><name>Your Name</name></author><link href="http://www.yoursite.com/blog/technotes/vim-keys.html"/><updated>2008-12-20T18:20:30Z</updated><published>2008-12-20T18:20:30Z</published><id>http://www.yoursite.com/blog/technotes/vim-keys.html</id><content type="html">
       

&lt;p&gt;:view /path/to/file will open a new buffer with the file in read-only mode
vim -R works as read-only mode. vim -M opens the file with modifiable set to&amp;nbsp;off.&lt;/p&gt;
&lt;p&gt;Cursor&amp;nbsp;movement&lt;/p&gt;
&lt;p&gt;h - move left
j - move down
k - move up
l - move right
ctrl-b - page up
ctrl-f - page down
% - jump to matching brace
w - jump by start of words (punctuation considered words)
W - jump by words (spaces separate words)
e - jump to end of words (punctuation considered words)
E - jump to end of words (no punctuation)
b - jump backward by words (punctuation considered words)
B - jump backward by words (no punctuation)
ge - jump backward to end of words (punctuation considered words)
gE - jump backward to end of words (no punctuation)
0 - (zero) start of line
^ - first non-blank character of line
$ - end of line
gg - Go to first line
[N]G - Go To line N. No N: last line
Note: Prefix a cursor movement command with a number to repeat it. For example,
4j moves down 4&amp;nbsp;lines.&lt;/p&gt;
&lt;p&gt;Insert Mode - Inserting/Appending&amp;nbsp;text&lt;/p&gt;
&lt;p&gt;i - start insert mode at cursor
I - insert at the beginning of the line
a - append after the cursor
A - append at the end of the line
o - open (append) blank line below current line (no need to press return)
O - open blank line above current line
ea - append at end of word
Esc - exit insert&amp;nbsp;mode&lt;/p&gt;
&lt;p&gt;Editing&lt;/p&gt;
&lt;p&gt;r - replace a single character (does not use insert mode)
J - join line below to the current one
cc - change (replace) an entire line
cw - change (replace) to the end of word
c$ - change (replace) to the end of line
s - delete character at cursor and subsitute text
S - delete line at cursor and substitute text (same as cc)
xp - transpose two letters (delete and paste, technically)
u - undo
ctrl-r - redo
. - repeat last command
~ - switch case
g~iw - switch case of current word
gUiw - make current word uppercase
guiw - make current word&amp;nbsp;lowercase&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;indent line one column to right
&amp;lt;&amp;lt; - indet line one column to left
== - auto-indent current line
ddp - swap current line with next
ddkP - swap current line with&amp;nbsp;previous&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cut and&amp;nbsp;Paste&lt;/p&gt;
&lt;p&gt;dd - delete (cut) a line
dw - delete the current word
x - delete current character
X - delete previous character
D - delete from cursor to end of line
yy - yank (copy) a line
2yy - yank 2 lines
yw - yank word
y$ - yank to end of line
p - put (paste) the clipboard after cursor/current line
P - put (paste) before cursor/current line
:set paste - avoid unexpected effects in&amp;nbsp;pasting&lt;/p&gt;
&lt;p&gt;Visual Mode - Marking&amp;nbsp;text&lt;/p&gt;
&lt;p&gt;v - start visual mode, mark lines, then do command (such as y-yank)
V - start Linewise visual mode
o - move to other end of marked area
U - upper case of marked area
ctrl+v - start visual block mode
O - move to Other corner of block
aw - mark a word
ab - a () block (with braces)
aB - a {} block (with brackets)
ib - inner () block
iB - inner {} block
Esc - exit visual&amp;nbsp;mode&lt;/p&gt;
&lt;p&gt;Visual Mode -&amp;nbsp;Commands&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;shift right
&amp;lt; - shift left
c - change (replace) marked text
y - yank (copy) marked text
d - delete (cut) marked text
~ - switch&amp;nbsp;case&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Visual Mode - Cut and&amp;nbsp;paste&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Place the cursor at the start of your&amp;nbsp;text.&lt;/li&gt;
&lt;li&gt;ma (marks the location as point&amp;nbsp;&#39;a&#39;)&lt;/li&gt;
&lt;li&gt;Place the cursor at the end of your&amp;nbsp;text.&lt;/li&gt;
&lt;li&gt;d&#39;a (cuts back to location&amp;nbsp;&#39;a&#39;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Exiting&lt;/p&gt;
&lt;p&gt;:w - write (save) the file, but don&#39;t exit
:wq - write (save) and quit
:x - same as :wq
:q - quit (fails if anything has changed)
:q! - quit and throw away&amp;nbsp;changes&lt;/p&gt;
&lt;p&gt;Search/Replace&lt;/p&gt;
&lt;p&gt;/pattern - search for pattern
?pattern - search backward for pattern
n - repeat search in same direction
N - repeat search in opposite direction
:%s/old/new/g - replace all old with new throughout file
:%s/old/new/gc - replace all old with new throughout file with&amp;nbsp;confirmations&lt;/p&gt;
&lt;p&gt;Working with multiple&amp;nbsp;files&lt;/p&gt;
&lt;p&gt;:e filename - Edit a file in a new buffer
:n *&lt;em&gt;/&lt;/em&gt;.pl - Open all perl files under the current directory, recursively
:tabe filename - Edit a file in a new tab (Vim7, gVim)
:bnext (or :bn) - go to next buffer
:bprev (or :bp) - go to previous buffer
:bd - delete a buffer (close a file)
:sp filename - Open a file in a new buffer and split window
ctrl-w s - Split windows
ctrl-w w - switch between windows
ctrl-w q - Quit a window
ctrl-w v - Split windows&amp;nbsp;vertically&lt;/p&gt;
&lt;p&gt;Tabs&amp;nbsp;(Vim7)&lt;/p&gt;
&lt;p&gt;gt - Next tab
gT - Previous tab
:tabr - First tab
:tabl - Last tab
:tabm [N] - Move current tab after tab N. No N: last. N=0: first.
$vim -p file1 file2 fileN  - Open multiple files in different tabs&amp;nbsp;(vim7)&lt;/p&gt;
&lt;p&gt;Command Line&amp;nbsp;Options&lt;/p&gt;
&lt;p&gt;$vim -c &quot;vim command&quot; file - execute an editor command on&amp;nbsp;startup&lt;/p&gt;
&lt;p&gt;Commands&lt;/p&gt;
&lt;p&gt;:setlocal fileformat=dos|unix
:setlocal&amp;nbsp;fileencoding=utf-8&lt;/p&gt;
&lt;p&gt;More&amp;nbsp;help&lt;/p&gt;
&lt;p&gt;:help - main help portal (with links to more help pages)
:viusage - show a huge cheat sheet listing every&amp;nbsp;command&lt;/p&gt;

   </content></entry></feed>